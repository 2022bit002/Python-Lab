	print() function in python is more fexible than the other language print function.
---------------------------------------------------------------------------------------------
	form 1:
		print function without any argument will give an blank line as an output
		
	form 2:
		print function with the string argument.
		escape character can be use with in print function and will give the desire output.
		operator can also be used with in it with proper operand.
		+ ==> both argument should be string.
		* ==> one argument int and the other should be string.
		
		print("pankaj"+"dhoran") ==> pankajdhoran   (no space in between the two string)
		print("pankaj","dhoran") ==> pankaj dhoran  (space between the string)
		
		
	form 3:
		print function with any number of argument. called as varag in java
		space is the default seperator between the print argument.
		if we don't want space and need comma in between the argument we an use the 'spe' tomark what will be the seprator.
		ex : print(10,20,30,sep=':')==> 10:20:30
		
		
	form 4:
		with end attribute.
		by default print function will be print in the new line.
		if want to print ever thing in same line with the seprator 
		ex : print ("hello",end=':')
		     print ('pankaj')	
		     ==> hello : pankaj
	
	form 5:
		print function with the formatted string.
		%i ==> integer
		%d ==> integer
		%f ==> float 
		%s ==> string
		
		a=90
		print("formatted string : %i" %a  )
		if a=90 b=80
		print ("value of a: %i and value of b : %i" %(a b))
		
	
	
	form 6:
		print function with the replacement operator
		{} ==> this is nothing but the  replacement operator.
		
		name='pankaj'
		salary = 2000
		gf ='xxx'
		
		print("hello {0} your salary is {1} and your girlfriend is {3}".format(name,salary,gf))
		if we donnot consider or write the number inside the curly bracket then it by default consider the number inside it.
		we can also use the variable inside the {} bracket and assign them the vaue inside  the format method in print function.
		
	
-------------------------------------------------------------------------------------------------------------------------------------------------------------

	FLOW CONTROL:
		the order in which the statement are going to exected and  control the flow of the program.
		
		3 types:
			conditional or selection statements :{if , if-else ,if-elif-else}
			iterative statement or loops statement :{for loop , while }
			transfer statement {break , continue , pass }
			
			
		this are the important flow statements that will control the flow of the code done by the user in python coding.
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
-------------------------------------------------------------------------------------------------------------------------------

		
		
		
		
		
		
		
		
